{"data":{"site":{"siteMetadata":{"title":"Gatsby Gitbook | YugaByte DB","docsLocation":"https://github.com/YugaByte/yugabyte-db/wiki"}},"mdx":{"fields":{"id":"78e39f76-0062-5566-8af3-c6f05e71009f","title":"Chinook Sample Database","slug":"/yugabyte/Chinook-Sample-Database"},"code":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"relativePath\": \"Chinook-Sample-Database.md\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"In this post we are going to walk you through how to download and install the PostgreSQL compatible version of the Chinook sample db onto the YugaByte DB distributed SQL database with a replication factor of 3.\"), mdx(\"p\", null, \"The Chinook data model represents a digital media store, including tables for artists, albums, media tracks, invoices and customers. Media related data was created using real data from an iTunes Library. Customer and employee information was created using fictitious names and addresses that can be located on Google maps, and other well formatted data (phone, fax, email, etc.). Sales information was auto generated using random data for a four year period. The basic characteristics of Chinook include:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"11 tables\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A variety of indexes, primary and foreign key constraints\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Over 15,000 rows of data\")), mdx(\"p\", null, \"Here\\u2019s an ER diagram of the Chinook data model:\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://3lr6t13cowm230cj0q42yphj-wpengine.netdna-ssl.com/wp-content/uploads/2019/07/distributed-sql-scale-out-postgresql-chinook-01.png\",\n    \"alt\": null\n  }))), mdx(\"p\", null, mdx(\"h2\", {\n    style: {\n      \"textAlign\": \"left\"\n    }\n  }, \"Download and Install YugaByte DB\"), \"\\nThe latest instructions on how to get up and running are on our Quickstart page here:\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://docs.yugabyte.com/latest/quick-start/\"\n  }), \"https://docs.yugabyte.com/latest/quick-start/\")), mdx(\"p\", null, mdx(\"h2\", {\n    style: {\n      \"textAlign\": \"left\"\n    }\n  }, \"Download and Install the Chinook Database\"), \"\\n\", mdx(\"h3\", null, \"Download the Chinook Scripts\"), \"\\nYou can download the Chinook database that is compatible with YugaByte DB from our GitHub repo. The three files are:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/YugaByte/yugabyte-db/blob/master/sample/chinook_ddl.sql\"\n  }), \"chinook_ddl.sql\"), \" which creates tables and constraints\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/YugaByte/yugabyte-db/blob/master/sample/chinook_genres_artists_albums.sql\"\n  }), \"chinook_genres_artists_albums.sql\"), \" which loads artist and album information\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/YugaByte/yugabyte-db/blob/master/sample/chinook_songs.sql\"\n  }), \"chinook_songs.sql\"), \" which loads individual song information\")), mdx(\"p\", null, \"We\\u2019ve purposely broken up what would otherwise be a very large script. By breaking it up into building blocks, it\\u2019ll be easier to see what YugaByteDB is doing and spot any problems (if you encounter them) a lot easier.\\n\", mdx(\"h3\", null, \"Create the Chinook Database\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"CREATE DATABASE chinook;\\n\")), mdx(\"p\", null, \"Let\\u2019s confirm we have the exercises database by listing out the databases on our cluster.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"postgres=# \\\\l\\n\")), mdx(\"p\", null, \"Switch to the chinook database.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"postgres=# \\\\c chinook\\n\\nYou are now connected to database \\\"chinook\\\" as user \\\"postgres\\\".\\nchinook=#\\n\")), mdx(\"h3\", null, \"Build the Chinook Tables and Objects\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"chinook=# \\\\i /Users/yugabyte/chinook_ddl.sql\\n\")), mdx(\"p\", null, \"We can verify that all 11 of our tables have been created by executing:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"chinook=# \\\\d\\n\")), mdx(\"h3\", null, \"Load Sample Data into Chinook\"), mdx(\"p\", null, \"Next, let\\u2019s load our database with sample data.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"chinook=# \\\\i /Users/yugabyte/chinook_genres_artists_albums.sql\\n\")), mdx(\"p\", null, \"and\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"chinook=# \\\\i /Users/yugabyte/chinook_songs.sql\\n\")), mdx(\"p\", null, \"Do a simple SELECT to pull data from the \\u201CTrack\\u201D table to verify we now have some data to play with.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"chinook=# SELECT \\\"Name\\\", \\\"Composer\\\" FROM \\\"Track\\\" LIMIT 10;\\n\\n              Name               |                          Composer                          \\n---------------------------------+------------------------------------------------------------\\n Boa Noite                       | \\n The Memory Remains              | Hetfield, Ulrich\\n Plush                           | R. DeLeo/Weiland\\n The Trooper                     | Steve Harris\\n Surprise! You're Dead!          | Faith No More\\n School                          | Kurt Cobain\\n Sometimes I Feel Like Screaming | Ian Gillan, Roger Glover, Jon Lord, Steve Morse, Ian Paice\\n Sad But True                    | Apocalyptica\\n Tailgunner                      | \\n Tempus Fugit                    | Miles Davis\\n(10 rows)\\n\")), mdx(\"h2\", null, \"Explore the Chinook Sample DB\"), mdx(\"p\", null, \"That\\u2019s it! You are ready to start exploring the Chinook sample database.\"));\n}\nMDXContent.isMDXComponent = true;"},"tableOfContents":{"items":[{"items":[{"url":"#build-the-chinook-tables-and-objects","title":"Build the Chinook Tables and Objects"},{"url":"#load-sample-data-into-chinook","title":"Load Sample Data into Chinook"}]},{"url":"#explore-the-chinook-sample-db","title":"Explore the Chinook Sample DB"}]},"parent":{"__typename":"File","relativePath":"yugabyte/Chinook-Sample-Database.md"},"frontmatter":{"metaTitle":null,"metaDescription":null}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/yugabyte/Home","title":"Home"}}},{"node":{"fields":{"slug":"/yugabyte/Chinook-Sample-Database","title":"Chinook Sample Database"}}},{"node":{"fields":{"slug":"/","title":"Landing Page"}}},{"node":{"fields":{"slug":"/introduction","title":"Introduction"}}},{"node":{"fields":{"slug":"/yugabyte/Northwind-Sample-Database","title":"Northwind Sample Database"}}},{"node":{"fields":{"slug":"/yugabyte/PGExercises","title":"PG Exercises"}}},{"node":{"fields":{"slug":"/yugabyte/YSQL-Tutorial:-Prerequisites","title":"YSQL Tutorial Prerequisites"}}},{"node":{"fields":{"slug":"/yugabyte/YSQL-and-PostgreSQL-Compatibility-Resources","title":"YSQL And Postgre SQL Compatibility Resources"}}},{"node":{"fields":{"slug":"/yugabyte/SportsDB-Sample-Database","title":"Sports DB Sample Database"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"78e39f76-0062-5566-8af3-c6f05e71009f"}}